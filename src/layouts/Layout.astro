---
import { ViewTransitions } from 'astro:transitions'
import Header from '../components/Header.astro'
import Footer from '@/components/Footer.astro'
import { Toaster } from '@/components/ui/toaster'
import { PaginationProducts } from '@/components/Pagination'

interface Props {
  title: string
  description: string
}

const { title, description } = Astro.props
---

<!doctype html>
<html lang='es'>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='description'
      content={description}
    />
    <meta
      name='viewport'
      content='width=device-width'
    />
    <link
      rel='icon'
      type='image/svg+xml'
      href='/favicon.svg'
    />
    <title>{title}</title>

    <ViewTransitions />
  </head>

  <body>
    <div class='px-4 md:px-16 lg:px-36 flex flex-col gap-12'>
      <Header />
      <slot />
      <PaginationProducts />
      <Footer />
    </div>

    <Toaster client:load />

    <style is:global>
      html {
        font-family: system-ui, sans-serif;
        background-size: 224px;
      }

      code {
        font-family:
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace;
      }
    </style>

    <script>
      const PUBLIC_VERCEL_ENV = import.meta.env.PUBLIC_VERCEL_ENV

      window.SnipcartSettings = {
        publicApiKey: PUBLIC_VERCEL_ENV,
        loadStrategy: 'on-user-interaction',
        addProductBehavior: 'none',
        modalStyle: 'side'
      }
      ;(function () {
        var c, d
        ;(d = (c = window.SnipcartSettings).version) != null ||
          (c.version = '3.0')
        var s, S
        ;(S = (s = window.SnipcartSettings).timeoutDuration) != null ||
          (s.timeoutDuration = 2750)
        var l, p
        ;(p = (l = window.SnipcartSettings).domain) != null ||
          (l.domain = 'cdn.snipcart.com')
        var w, u
        ;(u = (w = window.SnipcartSettings).protocol) != null ||
          (w.protocol = 'https')
        var m, g
        ;(g = (m = window.SnipcartSettings).loadCSS) != null || (m.loadCSS = !0)
        var y =
            window.SnipcartSettings.version?.includes('v3.0.0-ci') ||
            (window.SnipcartSettings.version != '3.0' &&
              window.SnipcartSettings.version?.localeCompare('3.4.0', void 0, {
                numeric: !0,
                sensitivity: 'base'
              }) === -1),
          f = ['focus', 'mouseover', 'touchmove', 'scroll', 'keydown']
        window.LoadSnipcart = o
        document.readyState === 'loading'
          ? document.addEventListener('DOMContentLoaded', r)
          : r()
        function r() {
          window.SnipcartSettings.loadStrategy
            ? window.SnipcartSettings.loadStrategy === 'on-user-interaction' &&
              (f.forEach(function (t) {
                return document.addEventListener(t, o)
              }),
              setTimeout(o, window.SnipcartSettings.timeoutDuration))
            : o()
        }
        var a = !1
        function o() {
          if (a) return
          a = !0
          let t = document.getElementsByTagName('head')[0],
            n = document.querySelector('#snipcart'),
            i = document.querySelector(
              'src[src^="'
                .concat(window.SnipcartSettings.protocol, '://')
                .concat(
                  window.SnipcartSettings.domain,
                  '"][src$="snipcart.js"]'
                )
            ),
            e = document.querySelector(
              'link[href^="'
                .concat(window.SnipcartSettings.protocol, '://')
                .concat(
                  window.SnipcartSettings.domain,
                  '"][href$="snipcart.css"]'
                )
            )
          n ||
            ((n = document.createElement('div')),
            (n.id = 'snipcart'),
            n.setAttribute('hidden', 'true'),
            document.body.appendChild(n)),
            h(n),
            i ||
              ((i = document.createElement('script')),
              /* @ts-ignore */
              (i.src = ''
                .concat(window.SnipcartSettings.protocol, '://')
                .concat(window.SnipcartSettings.domain, '/themes/v')
                .concat(
                  window.SnipcartSettings.version,
                  '/default/snipcart.js'
                )),
              /* @ts-ignore */
              (i.async = !0),
              t.appendChild(i)),
            !e &&
              window.SnipcartSettings.loadCSS &&
              ((e = document.createElement('link')),
              /* @ts-ignore */
              (e.rel = 'stylesheet'),
              /* @ts-ignore */
              (e.type = 'text/css'),
              /* @ts-ignore */
              (e.href = ''
                .concat(window.SnipcartSettings.protocol, '://')
                .concat(window.SnipcartSettings.domain, '/themes/v')
                .concat(
                  window.SnipcartSettings.version,
                  '/default/snipcart.css'
                )),
              t.prepend(e)),
            f.forEach(function (v) {
              return document.removeEventListener(v, o)
            })
        }
        function h(t: any) {
          !y ||
            ((t.dataset.apiKey = window.SnipcartSettings.publicApiKey),
            window.SnipcartSettings.addProductBehavior &&
              (t.dataset.configAddProductBehavior =
                window.SnipcartSettings.addProductBehavior),
            window.SnipcartSettings.modalStyle &&
              (t.dataset.configModalStyle = window.SnipcartSettings.modalStyle),
            window.SnipcartSettings.currency &&
              (t.dataset.currency = window.SnipcartSettings.currency),
            window.SnipcartSettings.templatesUrl &&
              (t.dataset.templatesUrl = window.SnipcartSettings.templatesUrl))
        }
      })()
    </script>
  </body></html
>
